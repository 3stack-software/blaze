var runCompilerOutputTests = function(run) {
    run("abc", "function () {\n  var view = this;\n  return \"abc\";\n}");
    run("{{foo}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo\", function() {\n    return Spacebars.mustache(view.lookup(\"foo\"));\n  });\n}");
    run("{{foo bar}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo\", function() {\n    return Spacebars.mustache(view.lookup(\"foo\"),\n                              view.lookup(\"bar\"));\n  });\n}");
    run("{{foo x=bar}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo\", function() {\n    return Spacebars.mustache(view.lookup(\"foo\"), Spacebars.kw({\n      x: view.lookup(\"bar\")\n    }));\n  });\n}");
    run("{{foo.bar baz}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo.bar\", function() {\n    return Spacebars.mustache(Spacebars.dot(\n             view.lookup(\"foo\"), \"bar\"),\n             view.lookup(\"baz\"));\n  });\n}");
    run("{{foo.bar (baz qux)}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo.bar\", function() {\n    return Spacebars.mustache(Spacebars.dot(\n             view.lookup(\"foo\"), \"bar\"),\n             Spacebars.dataMustache(view.lookup(\"baz\"), view.lookup(\"qux\")));\n  });\n}");
    run("{{foo bar.baz}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo\", function() {\n    return Spacebars.mustache(view.lookup(\"foo\"),\n           Spacebars.dot(view.lookup(\"bar\"), \"baz\"));\n  });\n}");
    run("{{foo x=bar.baz}}", "function() {\n  var view = this;\n  return Blaze.View(\"lookup:foo\", function() {\n    return Spacebars.mustache(view.lookup(\"foo\"), Spacebars.kw({\n      x: Spacebars.dot(view.lookup(\"bar\"), \"baz\")\n    }));\n  });\n}");
    run("{{#foo}}abc{{/foo}}", "function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"foo\"), (function() {\n    return \"abc\";\n  }));\n}");
    run("{{#if cond}}aaa{{else}}bbb{{/if}}", "function() {\n  var view = this;\n  return Blaze.If(function () {\n    return Spacebars.call(view.lookup(\"cond\"));\n  }, (function() {\n    return \"aaa\";\n  }), (function() {\n    return \"bbb\";\n  }));\n}");
    run("{{!-- --}}{{#if cond}}aaa{{!\n}}{{else}}{{!}}bbb{{!-- --}}{{/if}}{{!}}", "function() {\n  var view = this;\n  return Blaze.If(function () {\n    return Spacebars.call(view.lookup(\"cond\"));\n  }, (function() {\n    return \"aaa\";\n  }), (function() {\n    return \"bbb\";\n  }));\n}");
    run("{{> foo bar}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.call(view.lookup(\"bar\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"));\n  });\n}");
    run("{{> foo x=bar}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      x: Spacebars.call(view.lookup(\"bar\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"));\n  });\n}\n");
    run("{{> foo bar.baz}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"bar\"), \"baz\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"));\n  });\n}");
    run("{{> foo x=bar.baz}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      x: Spacebars.call(Spacebars.dot(view.lookup(\"bar\"), \"baz\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"));\n  });\n}");
    run("{{> foo bar baz}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.dataMustache(view.lookup(\"bar\"), view.lookup(\"baz\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"));\n  });\n}\n");
    run("{{#foo bar baz}}aaa{{/foo}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.dataMustache(view.lookup(\"bar\"), view.lookup(\"baz\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"), (function() {\n      return \"aaa\";\n    }));\n  });\n}");
    run("{{#foo p.q r.s}}aaa{{/foo}}", "function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"p\"), \"q\"), Spacebars.dot(view.lookup(\"r\"), \"s\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"foo\"), (function() {\n      return \"aaa\";\n    }));\n  });\n}");
    run("<a {{b}}></a>", "function() {\n  var view = this;\n  return HTML.A(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"b\"));\n  }));\n}");
    run("<a {{b}} c=d{{e}}f></a>", "function() {\n  var view = this;\n  return HTML.A(HTML.Attrs({\n    c: (function() { return [\n      \"d\",\n      Spacebars.mustache(view.lookup(\"e\")),\n      \"f\" ]; })\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"b\"));\n  }));\n}");
    run("<asdf>{{foo}}</asdf>", "function() {\n  var view = this;\n  return HTML.getTag(\"asdf\")(Blaze.View(\"lookup:foo\", function() {\n    return Spacebars.mustache(view.lookup(\"foo\"));\n  }));\n}");
    run("<textarea>{{foo}}</textarea>", "function() {\n  var view = this;\n  return HTML.TEXTAREA({value: (function () {\n    return Spacebars.mustache(view.lookup(\"foo\"));\n  }) });\n}");
    run("<textarea>{{{{|{{|foo}}</textarea>", "function() {\n  var view = this;\n  return HTML.TEXTAREA({value: (function () {\n    return [ \"{{{{\", \"{{\", \"foo}}\" ];\n  }) });\n}");
    run("{{|foo}}", "function() {\n  var view = this;\n  return [ \"{{\", \"foo}}\" ];\n}");
    run("<a b={{{|></a>", "function() {\n  var view = this;\n  return HTML.A({\n    b: (function () {\n      return \"{{{\";\n    })\n  });\n}");
};
